import type { InputProps, GsSelectPropsExtended } from '../Input';
import type { ContainerButtonPropsExtended } from '../Containers';
import type { ModelFormPropsExtended } from '../Form';
import type { UseSitesReturn, UseCurrenciesReturn } from '../../states';
export type SitesFormProps = {
    use: UseSitesReturn;
    formType: 'add' | 'update';
    useCurrencies: UseCurrenciesReturn;
    modelFormProps?: ModelFormPropsExtended;
    nameContainerProps?: ContainerButtonPropsExtended;
    nameInputProps?: InputProps;
    documentContainerProps?: ContainerButtonPropsExtended;
    documentTypeSelectProps?: GsSelectPropsExtended;
    documentNumberInputProps?: InputProps;
    addressContainerProps?: ContainerButtonPropsExtended;
    address1InputProps?: InputProps;
    address2InputProps?: InputProps;
    cityStateContainerProps?: ContainerButtonPropsExtended;
    cityInputProps?: InputProps;
    stateInputProps?: InputProps;
    citySelectProps?: GsSelectPropsExtended;
    stateSelectProps?: GsSelectPropsExtended;
    countryContainerProps?: ContainerButtonPropsExtended;
    countryInputProps?: InputProps;
    countrySelectProps?: GsSelectPropsExtended;
    postCodeInputProps?: InputProps;
    phoneEmailContainerProps?: ContainerButtonPropsExtended;
    phoneInputProps?: InputProps;
    emailInputProps?: InputProps;
    currenciesContainerProps?: ContainerButtonPropsExtended;
    currencySelectProps?: GsSelectPropsExtended;
    currencyLocationSelectProps?: GsSelectPropsExtended;
    separatorDecimalContainerProps?: ContainerButtonPropsExtended;
    separatorSelectProps?: GsSelectPropsExtended;
    decimalSelectProps?: GsSelectPropsExtended;
    taxesHostContainerProps?: ContainerButtonPropsExtended;
    taxesSelectProps?: GsSelectPropsExtended;
    hostInputProps?: InputProps;
};
export type SitesFormPropsExtended = {
    use?: UseSitesReturn;
    formType?: 'add' | 'update';
    useCurrencies?: UseCurrenciesReturn;
    modelFormProps?: ModelFormPropsExtended;
    nameContainerProps?: ContainerButtonPropsExtended;
    nameInputProps?: InputProps;
    documentContainerProps?: ContainerButtonPropsExtended;
    documentTypeSelectProps?: GsSelectPropsExtended;
    documentNumberInputProps?: InputProps;
    addressContainerProps?: ContainerButtonPropsExtended;
    address1InputProps?: InputProps;
    address2InputProps?: InputProps;
    cityStateContainerProps?: ContainerButtonPropsExtended;
    cityInputProps?: InputProps;
    stateInputProps?: InputProps;
    citySelectProps?: GsSelectPropsExtended;
    stateSelectProps?: GsSelectPropsExtended;
    countryContainerProps?: ContainerButtonPropsExtended;
    countryInputProps?: InputProps;
    countrySelectProps?: GsSelectPropsExtended;
    postCodeInputProps?: InputProps;
    phoneEmailContainerProps?: ContainerButtonPropsExtended;
    phoneInputProps?: InputProps;
    emailInputProps?: InputProps;
    currenciesContainerProps?: ContainerButtonPropsExtended;
    currencySelectProps?: GsSelectPropsExtended;
    currencyLocationSelectProps?: GsSelectPropsExtended;
    separatorDecimalContainerProps?: ContainerButtonPropsExtended;
    separatorSelectProps?: GsSelectPropsExtended;
    decimalSelectProps?: GsSelectPropsExtended;
    taxesHostContainerProps?: ContainerButtonPropsExtended;
    taxesSelectProps?: GsSelectPropsExtended;
    hostInputProps?: InputProps;
};
export declare const SitesForm: ({ use, formType, useCurrencies, modelFormProps, nameContainerProps, nameInputProps, documentContainerProps, documentTypeSelectProps, documentNumberInputProps, addressContainerProps, address1InputProps, address2InputProps, cityStateContainerProps, cityInputProps, stateInputProps, citySelectProps, stateSelectProps, countryContainerProps, countryInputProps, countrySelectProps, postCodeInputProps, phoneEmailContainerProps, phoneInputProps, emailInputProps, currenciesContainerProps, currencySelectProps, currencyLocationSelectProps, separatorDecimalContainerProps, separatorSelectProps, decimalSelectProps, taxesHostContainerProps, taxesSelectProps, hostInputProps, }: SitesFormProps) => JSX.Element;
